dist: trusty
sudo: true

env:
 - CC=clang-3.8 CXX=clang++-3.8 PACKAGES='clang-3.8 libomp-dev'
 - CC=clang-3.9 CXX=clang++-3.9 PACKAGES='clang-3.9 libomp-dev'
 - CC=clang-4.0 CXX=clang++-4.0 PACKAGES='clang-4.0 libomp-dev'
 - CC=gcc-4.7   CXX=g++-4.7     PACKAGES='gcc-4.7 g++-4.7'
 - CC=gcc-4.8   CXX=g++-4.8     PACKAGES='gcc-4.8 g++-4.8'
 - CC=gcc-4.9   CXX=g++-4.9     PACKAGES='gcc-4.9 g++-4.9'
 - CC=gcc-5     CXX=g++-5       PACKAGES='gcc-5   g++-5'

before_install:
 # Get rid of all the APT configurarion Travis "helpfully" provides per default
 - sudo rm --force --recursive --verbose /etc/apt

 # Create /etc/apt
 - sudo mkdir /etc/apt

 # Set up /etc/preferences
 - echo 'Package:*'                       | sudo tee --append /etc/apt/preferences
 - echo 'Pin:release a=xenial-backports'  | sudo tee --append /etc/apt/preferences
 - echo 'Pin-Priority:500'                | sudo tee --append /etc/apt/preferences

 # Set up /etc/sources.list
 - echo "deb http://archive.ubuntu.com/ubuntu xenial           main universe" | sudo tee --append /etc/apt/sources.list
 - echo "deb http://archive.ubuntu.com/ubuntu xenial-backports main universe" | sudo tee --append /etc/apt/sources.list
 - echo "deb http://archive.ubuntu.com/ubuntu xenial-security  main universe" | sudo tee --append /etc/apt/sources.list

 # Set up /etc/apt/trusted.gpg
 - sudo cp /usr/share/keyrings/ubuntu-archive-keyring.gpg /etc/apt/trusted.gpg

 # Update the package lists, but ...
 - sudo apt-get update

 # ... only uprade selected packages.
 - sudo env DEBIAN_FRONTEND=noninteractive apt-get install --yes binutils

install:
 # Install the packages needed for the specific build we are on
 - sudo env DEBIAN_FRONTEND=noninteractive apt-get install --yes ${PACKAGES}

 # Install the packages needed for all builds
 - sudo env DEBIAN_FRONTEND=noninteractive apt-get install --yes bear
 - sudo env DEBIAN_FRONTEND=noninteractive apt-get install --yes clang-tidy
 - sudo env DEBIAN_FRONTEND=noninteractive apt-get install --yes libmosquitto-dev
 - sudo env DEBIAN_FRONTEND=noninteractive apt-get install --yes libopenmpi-dev
 - sudo env DEBIAN_FRONTEND=noninteractive apt-get install --yes libpapi-dev
 - sudo env DEBIAN_FRONTEND=noninteractive apt-get install --yes libprotobuf-c-dev
 - sudo env DEBIAN_FRONTEND=noninteractive apt-get install --yes make
 - sudo env DEBIAN_FRONTEND=noninteractive apt-get install --yes openmpi-bin
 - sudo env DEBIAN_FRONTEND=noninteractive apt-get install --yes protobuf-c-compiler
 - sudo env DEBIAN_FRONTEND=noninteractive apt-get install --yes python

script:
 # Build and test everything
 - ./configure
 - make
 - make test

 # Test installation
 - sudo make install
 - sudo make uninstall

 # Run the linter
 - make tidy
