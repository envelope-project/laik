language:           c
sudo:               true
dist:               trusty

matrix:
  include:
    - compiler:     gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
      env:
          - COMPILERCXX=g++-4.9
          - COMPILERC=gcc-4.9
    - compiler:     gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
          - COMPILERCXX=g++-5
          - COMPILERC=gcc-5
    - compiler:     gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env:
          - COMPILERCXX=g++-6
          - COMPILERC=gcc-6
    - compiler:     clang
      env:
          - COMPILERC=clang
          - COMPILERCXX=clang++
          - CLANGV=3.8.1
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
    - compiler:     clang
      env:
          - COMPILERC=clang
          - COMPILERCXX=clang++
          - CLANGV=3.9.1
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
    - compiler:     clang
      env:
          - COMPILERC=clang
          - COMPILERCXX=clang++
          - CLANGV=4.0.1
          - RUNCLANGTIDY=TRUE
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6


before_install:
  - sudo add-apt-repository ppa:mosquitto-dev/mosquitto-ppa -y
  - sudo apt-get -qq update
  - sudo apt-get install -y openmpi-bin libopenmpi-dev libmosquitto-dev libprotobuf-c0-dev protobuf-c-compiler uuid uuid-dev
  - mkdir $HOME/clang+llvm
  - export PATH=$HOME/clang+llvm/bin:$PATH
  - if [ -n "$CLANGV" ]; then wget http://llvm.org/releases/$CLANGV/clang+llvm-$CLANGV-x86_64-linux-gnu-debian8.tar.xz -O $HOME/clang+llvm.tar.xz; fi
  - if [ -n "$CLANGV" ]; then tar xf $HOME/clang+llvm.tar.xz -C $HOME/clang+llvm --strip-components 1; fi
  # install Bear to create compile database based on the makefile
  - if [ -n "$RUNCLANGTIDY" ]; then git clone https://github.com/rizsotto/Bear.git; fi
  - if [ -n "$RUNCLANGTIDY" ]; then cd Bear; fi
  - if [ -n "$RUNCLANGTIDY" ]; then make all; fi
  - if [ -n "$RUNCLANGTIDY" ]; then sudo make install; fi
  - if [ -n "$RUNCLANGTIDY" ]; then cd ..; fi

script:
  - ./configure
  - CC=$COMPILERC CXX=$COMPILERCXX make
  - CC=$COMPILERC CXX=$COMPILERCXX make test
  - if [ -n "$RUNCLANGTIDY" ]; then make clean; fi
  - if [ -n "$RUNCLANGTIDY" ]; then CC=$COMPILERC CXX=$COMPILERCXX bear make; fi
  - if [ -n "$RUNCLANGTIDY" ]; then CC=$COMPILERC CXX=$COMPILERCXX bear make test; fi
  - if [ -n "$RUNCLANGTIDY" ]; then git ls-files '*.c' | xargs -P 1 -I{} clang-tidy -p build/ -header-filter="^((?\!build).)*$" {}; fi
